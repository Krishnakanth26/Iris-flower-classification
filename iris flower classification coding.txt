#import libraries off our project
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
import pandas as pd


#load the dataset
df = sns.load_dataset('iris')


#print the first 5 rows of the dataset
df.head()



#exploratory data analysis
df.describe()


#types of classes
df.species.value_counts()


#generating the pairplot
sns.pairplot(df,hue='species', diag_kind='hist')



fig,ax=plt.subplots(2,2,figsize=(12,6))
sns.boxplot(x=df["species"],y=df["sepal_length"],ax=ax[0][0])
sns.boxplot(x=df["species"],y=df["sepal_width"],ax=ax[0][1])
sns.boxplot(x=df["species"],y=df["petal_length"],ax=ax[1][0])
sns.boxplot(x=df["species"],y=df["petal_width"],ax=ax[1][1])



#features and target
X=df[['petal_length', 'petal_width']]
species_to_num = {'setosa': 0, 'versicolor': 1, 'virginica': 2}
df['tmp'] = df['species'].map(species_to_num)
Y=df['tmp']


#train test split
from sklearn.model_selection import train_test_split

X_train, X_test, y_train, y_test = train_test_split(X,Y,train_size=0.8,random_state=0)



#feature scaling
from sklearn.preprocessing import StandardScaler
sc=StandardScaler()
x_train_std=sc.fit_transform(X_train)
x_train_std


#build model
#linearSVC (using liblinear, for large dataset liblinear)
#SVC (using libsvm, Libsvm performs very slow at 10k samples.)
from sklearn import svm
C = 0.001
svm_clf = svm.SVC(kernel='linear', C=C)
svm_clf.fit(x_train_std, y_train)



#standardize xtest
x_test_std=sc.transform(X_test)
x_test_std



y_test_pred=svm_clf.predict(x_test_std)
y_test_pred



#evaluation metrics
from sklearn.metrics import accuracy_score,classification_report,confusion_matrix



accuracy_score(y_test,y_test_pred)



print(classification_report(y_test,y_test_pred))



#confusion marix
confusion_matrix(y_test,y_test_pred)